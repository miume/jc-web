import React,{Componet, Component} from 'react'
import {Spin,Table} from 'antd'
import Detail from './detail'
import '../process.css'

class StatisticDone extends Component{//已统计
    constructor(props){
        super(props);
        this.state={
            loading:true,
        }
        this.pagination={
            showSizeChanger:true,
            showTotal:(total)=>`共${total}条记录`,
            pageSizeOptions:['10','20','50','100']
        }
        this.columns=[{
            title:'序号',
            dataIndex:'index',
            key:'index',
            width:'5%'
        },{
            title:'周期类型',
            dataIndex:'periodName',
            key:'periodName',
            width:'8%'
        },{
            title:'期数',
            dataIndex:'head.lineName',
            key:'head.lineName',
            width:'6%'
        },{
            title:'开始时间',
            dataIndex:'head.startTime',
            key:'head.startTime',
            width:'12%'
        },{
            title:'结束时间',
            dataIndex:'head.endTime',
            key:'head.endTime',
            width:'12%'
        },{
            title:'过程工序',
            dataIndex:'processName',
            key:'processName',
            width:'9%'
        },{
            title:'小计值',
            dataIndex:'detail.totals',
            key:'detail.totals',
            width:'8%'
        },{
            title:'Ni金属量(T)',
            dataIndex:'detail.niValue',
            key:'detail.niValue',
            width:'10%'
        },{
            title:'Co金属量(T)',
            dataIndex:'detail.coValue',
            key:'detail.coValue',
            width:'10%'
        },{
            title:'Mn金属量(T)',
            dataIndex:'detail.mnValue',
            key:'detail.mnValue',
            width:'10%'
        },{
            title:'操作',
            dataIndex:'operation',
            key:'operation',
            render:(text,record)=>{
                return(
                    <Detail record={record} url={this.props.url} processDetailId={record.detail.code} processCode={record.detail.processCode}/>
                )
            }
        }]
        this.handleTableChange=this.handleTableChange.bind(this);
    }
    componentDidMount(){
        this.props.getPagination('2',this.pagination)
    }
    handleTableChange(pagination){
        this.props.handleTableChange({
            size:pagination.pageSize,
            page:pagination.current
        })
    }
    render(){
        return(
            <div>
                <Spin spinning={this.props.loadingStatis} >
                    <Table
                    rowKey={record=>record.index}
                    dataSource={this.props.dataStatistic}
                    columns={this.columns}
                    pagination={this.props.pagination}
                    onChange={this.handleTableChange}
                    size='small'
                    bordered/>
                </Spin>
            </div>
        );
    }
}
export default StatisticDone